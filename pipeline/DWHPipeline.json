{
	"name": "DWHPipeline",
	"properties": {
		"activities": [
			{
				"name": "Lee Tabla Configuracion",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "SELECT \n\tId\n\t,TipoCarga\n\t,TablaOrigen\n\t,Columnas\n\t,TablaDestino\n\t,WatermarkValue\n\t,WatermarkColumn \nFROM\nconfiguracion.[TablaConfiguracion]\nWHERE\n\tHabilitado = 1",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DWHSTIDataSet",
						"type": "DatasetReference",
						"parameters": {
							"TableName": "dummy"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Iterador Carga Full",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Carga Completa",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Carga Completa').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Carga Data Full",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT \n      @{item().Columnas} \nFROM\n      @{item().TablaOrigen}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "TRUNCATE TABLE @{item().TablaDestino}",
										"type": "Expression"
									},
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ProdSQLDWH",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@{Item().TablaOrigen}",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DWHSTIDataSet",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@{item().TablaDestino}",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "Carga Completa",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lee Tabla Configuracion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lee Tabla Configuracion').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().TipoCarga,'Completa')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Carga Parcial",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Lee Tabla Configuracion",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Lee Tabla Configuracion').output.value",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().TipoCarga,'Parcial')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Iterador Carga Parcial",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Carga Parcial",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Carga Parcial').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Carga Data Parcial",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Busca Max Watermark",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT \n      @{item().Columnas} \nFROM\n      @{item().TablaOrigen}\nWHERE\n      @{item().WatermarkColumn} > '@{item().WatermarkValue}'",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ProdSQLDWH",
									"type": "DatasetReference",
									"parameters": {
										"TableName": "@{Item().TablaOrigen}"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DWHSTIDataSet",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@{item().TablaDestino}",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Actualiza Watermark",
							"description": "",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Carga Data Parcial",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[configuracion].[ActualizaWatermark]",
								"storedProcedureParameters": {
									"Id": {
										"value": {
											"value": "@{item().Id}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"WatermarkValue": {
										"value": {
											"value": "@activity('Busca Max Watermark').output.FirstRow.WatermarkValue",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "DWHAzSQL",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Busca Max Watermark",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT\n     MAX(@{item().WatermarkColumn}) AS WatermarkValue\nFROM\n     @{item().TablaOrigen}\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ProdSQLDWH",
									"type": "DatasetReference",
									"parameters": {
										"TableName": "dummy"
									}
								}
							}
						}
					]
				}
			}
		],
		"folder": {
			"name": "STI-Tutorial"
		},
		"annotations": [],
		"lastPublishTime": "2022-03-14T17:54:32Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}